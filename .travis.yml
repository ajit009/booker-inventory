os:
  - linux
services:
  - docker
language: node_js
node_js:
  - "10.16.3"
cache:
  directories:
    - node
    - node_modules
    - $HOME/.gradle
env:
  global:
    - NODE_VERSION=10.16.3
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false
    - JHI_DISABLE_WEBPACK_LOGS=true
    - NG_CLI_ANALYTICS="false"
before_install:
  - |
    if [[ $JHI_JDK = '8' ]]; then
      echo '*** Using OpenJDK 8'
    else
      echo '*** Using OpenJDK 11 by default'
      sudo DEBIAN_FRONTEND=noninteractive add-apt-repository -yq ppa:openjdk-r/ppa
      sudo DEBIAN_FRONTEND=noninteractive apt-get update -yq
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq openjdk-11-jdk
      sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
      java -version
    fi
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  - nvm install $NODE_VERSION
  - npm install -g npm
  - node -v
  - npm -v
addons:
  sonarcloud:
    organization: "ajit009_booker-inventory"
    token:
      secure: "VMOdAtquyejUwd/cE2xTrkfQD/zYuVJgRyeMDpvqW0Y/BXX2oJz5oMdgpVCa9myHfIyfJyxME8QYxBySaCtpqgmUscJgGuGthDtj92KqbQN+tdprxXET7WEgrl2fzNgQXKom8MuOAOxutK03wpFg26I2ueSizBvv2lVc8tdM0XRQrlJeVQXCGfzgh66w1sq2OEAFTvIBLf2Upd4d7tEguwgowO/wUUsAsjQHl6blNjktzQqUYpJXjBud6LKqpLEmHmpxUplVh+DufveTFh7JbvoSFONcaUDEOdpF+URp+ILEe9PsxrtkZeWtbm0VW4J7Y8T3eWBIYDdJvNVxWpeqJGELCvYQPEk47iJuluFlyf123/PUaDBJvnhbsF8QRLZl90mIHIu1K60MFg8Hn4c44+3ywn/z6OHMfDPdES0YtOtWuN+UZLMqcEgN6Sw2xB+Xa/1ECId90OJh/gaPpdoESd2E1NbQIGhKecOQAfY3KQSt74WuUHoRCHxJpTWkY5RSVDQTcRLDHsG6eVwN5TgmKHbAUd9amKx9nsZiimYtTephtqIp6u3V1AoPOM6FcZYQoAsW9jezcv/jfxCh8FlNnNWocMoG9EiDwgBwU53/74D9nwg1LRsZnCVAQ3ocNOt67JYzFdxOtUDup3dLvqp3ItJcJTeC/5IuHIHZ8yyWwHo=" # encrypted value of your token
install:
  - npm install
script:
  - chmod +x gradlew
  - ./gradlew clean test integrationTest
  - ./gradlew bootJar -Pprod -x test
  # - ./gradlew -Pprod clean check jacocoTestReport sonarqube
  - ./gradlew bootJar -Pprod jibDockerBuild
  - docker login -u ${USERNAME} -p ${PASSWORD} && docker push ajit009/bookerinventory
notifications:
  webhooks:
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
